{"ast":null,"code":"var _jsxFileName = \"/Users/simoncatalin/Desktop/JavaScript/react-blog-website/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from \"../../contex/Context\";\nimport \"./singlePost.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        data: {\n          username: user.username,\n          title,\n          desc\n        }\n      });\n      window.location.reload();\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostBtn\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/Users/simoncatalin/Desktop/JavaScript/react-blog-website/client/src/components/singlePost/SinglePost.jsx"],"names":["React","useEffect","useState","useContext","useLocation","Link","axios","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","reload","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from \"../../contex/Context\";\n\nimport \"./singlePost.scss\";\n\nexport default function SinglePost() {\n    const location = useLocation();\n    const path = location.pathname.split(\"/\")[2];\n    const [post, setPost] = useState({});\n    const PF = \"http://localhost:5000/images/\";\n    const { user } = useContext(Context);\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [updateMode, setUpdateMode] = useState(false);\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path);\n            setPost(res.data);\n            setTitle(res.data.title);\n            setDesc(res.data.desc);\n        };\n        getPost();\n    }, [path])\n\n    const handleDelete = async () => {\n        try {\n            await axios.delete(`/posts/${post._id}`,  {\n                data: {username: user.username}});\n            window.location.replace(\"/\");\n        } catch(err) {}\n    }\n\n    const handleUpdate = async () => {\n        try {\n            await axios.put(`/posts/${post._id}`,  {\n                data: {username: user.username, \n                title,\n                desc\n            }});\n            window.location.reload();\n        } catch(err) {}\n    }\n    \n    return (\n        <div className=\"singlePost\">\n            <div className=\"singlePostWrapper\">\n                {post.photo && (\n                    <img \n                        src={PF + post.photo}\n                        alt=\"\"\n                        className=\"singlePostImg\"\n                    />\n                )}\n                {updateMode ? (\n                    <input \n                        type=\"text\" \n                        value={title} \n                        className=\"singlePostTitleInput\" \n                        autoFocus\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                ) : (\n\n                    <h1 className=\"singlePostTitle\">\n                        {post.title}\n                        {post.username === user?.username && (\n                            <div className=\"singlePostEdit\">\n                                <i className=\"singlePostIcon far fa-edit\" onClick={() => setUpdateMode(true)}></i>\n                                <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>                               \n                            </div>\n                        )}                    \n                    </h1>\n                )  }\n                <div className=\"singlePostInfo\">\n                    <span className=\"singlePostAuthor\">\n                        Author: \n                        <Link to={`/?user=${post.username}`} className=\"link\">\n                            <b>{post.username}</b>\n                        </Link>\n                    </span>\n                    <span className=\"singlePostDate\">\n                        {new Date(post.createdAt).toDateString()}\n                    </span>\n                </div>\n                {updateMode ? (\n                    <textarea className=\"singlePostDescInput\" value={desc} onChange={(e) => setDesc(e.target.value)} />\n                ) : (\n                    <p className=\"singlePostDesc\"> \n                        {post.desc}\n                    </p>\n                )}\n                <button className=\"singlePostBtn\" onClick={handleUpdate}>Update</button>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}